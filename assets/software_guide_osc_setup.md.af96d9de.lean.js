import{_ as r,a as d}from"./chunks/index.879b693c.js";import{_ as n,i as a}from"./chunks/index.2d585e8f.js";import{o as l,c,a as t,w as h,u as o,g as e,b as i,h as s}from"./app.157d900b.js";const p=e("h1",{id:"setting-up-recalibration-and-recentering-from-vrchat",tabindex:"-1"},[i("Setting up recalibration and recentering from VRChat. "),e("a",{class:"header-anchor",href:"#setting-up-recalibration-and-recentering-from-vrchat","aria-hidden":"true"},"#")],-1),u=e("p",null,"ETVR has a mechanism that allows you to recalibrate and recenter your tracking without the need to interact with the app directly, here's how to setup your avatar to make use of OSC to trigger this from within VRC itself.",-1),m=e("p",null," Note, while this page explains how to do it from the point of view of vrchat, it can be done in Neos and CVR too, all the app listens to are two OSC messages. ",-1),_=s("",6),g=e("p",null,[i("Clicking on it will highligh the associated asset in the asset browser, click on the highlighted file to get its content to show in the inspector panel. Now, in the inspector click on the "),e("code",null,"Add"),i(" button to add the parameters mentioned above, both of them need to be of type Bool, they don't need to be synced nor saved.")],-1),f=e("p",null,"That's it for the parameters.",-1),y=e("h3",{id:"adding-buttons-to-the-menu",tabindex:"-1"},[i("Adding buttons to the menu "),e("a",{class:"header-anchor",href:"#adding-buttons-to-the-menu","aria-hidden":"true"},"#")],-1),b=e("p",null,"Now, you will need to add actual buttons for them in your gesture menu.",-1),v=e("p",null,"The expressions section mentioned above also contains the menu, you can use that to either add the buttons there directly or create a small submenu to make it less cluttered, here we will add them directly.",-1),w=e("p",null,'Once you have the menu file opened in the inspector, click on the "add control" button. This will add an empty action slot, expand it.',-1),k=e("p",null,`You'll see a bunch of fields, like name, icon, type and parameter. Firstly, let's give it a friendly name like "recalibrate eyes" or "recenter tracking" depending on the action you want to assign to them.`,-1),C=e("p",null,"Leave the type as is - as a button, it's more convenient as it bounces back into the off state by itself.",-1),T=e("p",null,[i("Now, in the parameter section, click on the "),e("code",null,"[None]"),i(" and select one of the parameters you have created in the previous section.")],-1),x=s("",14),P=JSON.parse(`{"title":"Setting up recalibration and recentering from VRChat.","description":"","frontmatter":{},"headers":[{"level":2,"title":"Setting up your parameters","slug":"setting-up-your-parameters","link":"#setting-up-your-parameters","children":[{"level":3,"title":"Adding parameters","slug":"adding-parameters","link":"#adding-parameters","children":[]},{"level":3,"title":"Adding buttons to the menu","slug":"adding-buttons-to-the-menu","link":"#adding-buttons-to-the-menu","children":[]}]},{"level":2,"title":"Reseting the OSC config in case the parameters don't work","slug":"reseting-the-osc-config-in-case-the-parameters-don-t-work","link":"#reseting-the-osc-config-in-case-the-parameters-don-t-work","children":[]},{"level":2,"title":"Other platforms","slug":"other-platforms","link":"#other-platforms","children":[]}],"relativePath":"software_guide/osc_setup.md","lastUpdated":1682887355000}`),S={name:"software_guide/osc_setup.md"},D=Object.assign(S,{setup(V){return(A,R)=>(l(),c("div",null,[p,u,t(r,{options:o(d).parts_list_two},{content:h(()=>[m]),_:1},8,["options"]),_,t(n,{options:o(a).unity_vrc_expressions},null,8,["options"]),g,t(n,{options:o(a).unity_vrc_expressions_add_fields},null,8,["options"]),t(n,{options:o(a).unity_vrc_expressions_fields},null,8,["options"]),f,y,b,v,t(n,{options:o(a).unity_vrc_expressions},null,8,["options"]),w,t(n,{options:o(a).unity_vrc_empty_control},null,8,["options"]),k,C,T,t(n,{options:o(a).unity_vrc_control_setup},null,8,["options"]),x]))}});export{P as __pageData,D as default};
