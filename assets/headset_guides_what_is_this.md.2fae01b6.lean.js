import{_ as a,o as t,c as o,O as i}from"./chunks/framework.79850ceb.js";const u=JSON.parse('{"title":"What are \\"Headset Specific Guides\\"?","description":"","frontmatter":{},"headers":[],"relativePath":"headset_guides/what_is_this.md","filePath":"headset_guides/what_is_this.md","lastUpdated":1711999868000}'),s={name:"headset_guides/what_is_this.md"};function r(n,e,d,l,p,c){return t(),o("div",null,e[0]||(e[0]=[i('<h1 id="what-are-headset-specific-guides" tabindex="-1">What are &quot;Headset Specific Guides&quot;? <a class="header-anchor" href="#what-are-headset-specific-guides" aria-label="Permalink to &quot;What are &quot;Headset Specific Guides&quot;?&quot;">​</a></h1><p>This is an initiative to provide specific information on specific headsets. Any weird quirks, recommended 3d printed mounts and different setup types are to be included on a page.</p><p>Complete submissions will receive a 20% off coupon for the ETVR store. Partial completions (one specific mount) will receive 15% off coupons to show our appreciation and provide an incentive. (reach out to me in dms to receive the code <code>@prohurtz</code>)</p><p>Thank you for working to improve EyeTrackVR&#39;s accessibility!</p><h3 id="guidelines" tabindex="-1">Guidelines <a class="header-anchor" href="#guidelines" aria-label="Permalink to &quot;Guidelines&quot;">​</a></h3><p>Please keep it as concise as possible, and spell check before submitting. You can submit by making a PR on github, or sending the <code>.md</code> file to #documentation in the ETVR Discord pringing <code>@prohurtz</code> .</p><p>file name: <code>headset_name.md</code> ex. <code>HTC_Vive_Pro_2.md</code>, <code>Bigscreen_Beyond.md</code></p><p>Page formatting and template:</p><h1 id="headset-name" tabindex="-1">Headset Name <a class="header-anchor" href="#headset-name" aria-label="Permalink to &quot;Headset Name&quot;">​</a></h1><h2 id="xyz-s-mod" tabindex="-1">Xyz&#39;s mod: <a class="header-anchor" href="#xyz-s-mod" aria-label="Permalink to &quot;Xyz&#39;s mod:&quot;">​</a></h2><p>[image(s) of mod (limit ~2)]</p><h4 id="mod-details" tabindex="-1">Mod Details <a class="header-anchor" href="#mod-details" aria-label="Permalink to &quot;Mod Details&quot;">​</a></h4><p>This mod supports lens inserts and is very compact and easy to use. It provides good frunk ventilation and wide hardware support.</p><h4 id="extra-parts-needed" tabindex="-1">Extra Parts Needed: <a class="header-anchor" href="#extra-parts-needed" aria-label="Permalink to &quot;Extra Parts Needed:&quot;">​</a></h4><ul><li>2x Camera extensions</li><li>2x Camera extension connectors</li></ul><p><a href="./../how_to_build/part_list#additional-parts">Parts Link</a> (If the parts needed are not on the additional parts page, let me know. You can also just directly link to them.)</p><h4 id="_3d-printed-mounts" tabindex="-1">3D Printed Mounts <a class="header-anchor" href="#_3d-printed-mounts" aria-label="Permalink to &quot;3D Printed Mounts&quot;">​</a></h4><p>Found at Xyz&#39;s <a href="https://github.com/" target="_blank" rel="noreferrer">GitHub</a></p><p>You will need to print:</p><ul><li>2x camera mount</li><li>2x frunk mount</li></ul><p>Lens insert support Yes/No: Yes <a href="https://github.com" target="_blank" rel="noreferrer">Compatable mount</a></p><div class="info custom-block"><p class="custom-block-title">Note</p><p>There are 160 and 130-degree variants for camera mounts; pick which one corresponds with your cameras.</p></div><h4 id="assembly-details" tabindex="-1">Assembly Details: <a class="header-anchor" href="#assembly-details" aria-label="Permalink to &quot;Assembly Details:&quot;">​</a></h4><p>(make sure to include quirks of setup not covered in other parts of documentation)</p><p>First, screw an M2 screw into the hole on part A:</p><p>[image showing &quot;part A&quot; and screw]</p><p>You must have a Torx screwdriver set to remove the frunk screw, do so now.</p><p>[image]</p><p>Then attach part b and tighten:</p><p>[image]</p><p>Now clip on [image]</p><h2 id="abc-s-mod" tabindex="-1">Abc&#39;s mod: <a class="header-anchor" href="#abc-s-mod" aria-label="Permalink to &quot;Abc&#39;s mod:&quot;">​</a></h2><p>[image(s) of mod (limit ~2)]</p><h4 id="mod-details-1" tabindex="-1">Mod Details <a class="header-anchor" href="#mod-details-1" aria-label="Permalink to &quot;Mod Details&quot;">​</a></h4><p>This mod supports lens inserts and is very compact and easy to use. It provides good frunk ventilation and wide hardware support.</p><h4 id="extra-parts-needed-1" tabindex="-1">Extra Parts Needed: <a class="header-anchor" href="#extra-parts-needed-1" aria-label="Permalink to &quot;Extra Parts Needed:&quot;">​</a></h4><ul><li>2x Camera extensions</li><li>2x Camera extension connectors</li><li>50 M3 screws <a href="./../how_to_build/part_list#additional-parts">Parts Link</a> (If the parts needed are not on the additional parts page, let me know. You can also just directly link to them.)</li></ul><h4 id="_3d-printed-mounts-1" tabindex="-1">3D Printed Mounts <a class="header-anchor" href="#_3d-printed-mounts-1" aria-label="Permalink to &quot;3D Printed Mounts&quot;">​</a></h4><p>Found at Abc&#39;s <a href="https://github.com/" target="_blank" rel="noreferrer">GitHub</a></p><p>You will need to print:</p><ul><li>2x camera mount</li><li>2x frunk mount</li></ul><p>Lens insert support Yes/No: Yes <a href="https://github.com" target="_blank" rel="noreferrer">Compatable mount</a></p><div class="info custom-block"><p class="custom-block-title">Note</p><p>There are 160 and 130-degree variants for camera mounts; pick which one corresponds with your cameras.</p></div><h4 id="assembly-details-1" tabindex="-1">Assembly Details: <a class="header-anchor" href="#assembly-details-1" aria-label="Permalink to &quot;Assembly Details:&quot;">​</a></h4><p>(make sure to include quirks of setup not covered in other parts of documentation)</p><p>First, screw an M2 screw into the hole on part A:</p><p>[image showing &quot;part A&quot; and screw]</p><p>You must have a Torx screwdriver set to remove the frunk screw, do so now.</p><p>[image]</p><p>Then attach part b and tighten:</p><p>[image]</p><p>Now clip on [image]</p>',52)]))}const m=a(s,[["render",r]]);export{u as __pageData,m as default};
