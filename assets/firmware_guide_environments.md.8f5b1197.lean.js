import{_ as o,i}from"./chunks/index.6e6e7312.js";import{o as t,c as s,O as n,E as r,l as a}from"./chunks/framework.79850ceb.js";const p=JSON.parse('{"title":"Firmware Environments","description":"","frontmatter":{},"headers":[],"relativePath":"firmware_guide/environments.md","filePath":"firmware_guide/environments.md","lastUpdated":1698315393000}'),d={name:"firmware_guide/environments.md"},u=Object.assign(d,{setup(l){return(c,e)=>(t(),s("div",null,[e[0]||(e[0]=n('<h1 class="text-[var(--font-accent)]" id="firmware-environments" tabindex="-1">Firmware Environments <a class="header-anchor" href="#firmware-environments" aria-label="Permalink to &quot;Firmware Environments {.text-[var(--font-accent)]}&quot;">​</a></h1><h2 id="what-is-it" tabindex="-1">What is it? <a class="header-anchor" href="#what-is-it" aria-label="Permalink to &quot;What is it?&quot;">​</a></h2><p>A firmware environment is a way to store the custom firmware config for a specific device. This is useful if you want to have multiple devices with different firmware configs.</p><p>We use environments to store the firmware config for each device, so that you can easily switch between them.</p><p>Environments are broken up into two distinct parts:</p><ul><li>The <code>build type</code> (e.g. <code>debug</code>, <code>release</code>)</li><li>The <code>board type</code> (e.g. <code>espaithinker</code>, <code>esp32cam</code>)</li></ul><h2 id="build-types" tabindex="-1">Build Types <a class="header-anchor" href="#build-types" aria-label="Permalink to &quot;Build Types&quot;">​</a></h2><p>We now have a couple of options letting us decide how we want to build the firmware.</p><ul><li><p><code>Debug</code> - The debug environment is the default environment and does not need to be specified. It has a lot of logging so it is useful for getting everything setup for the first time and to see what is going on.</p></li><li><p><code>_release</code> - Has a lot less debugging, may also be missing some things available only in debug for debug purposes, this should be flashed when everything is working.</p></li></ul><p>Examples:<br><code>xiaosenses3</code> - This is the debug environment.<br><code>xiaosenses3_release</code> - This is the release environment for daily use.</p><div class="tip custom-block"><p class="custom-block-title">Tip</p><p>We recommend starting with a debug environment, and then switching to release once everything is working. A debug environnement should not be used permanently.</p></div><h2 id="board-types" tabindex="-1">Board Types <a class="header-anchor" href="#board-types" aria-label="Permalink to &quot;Board Types&quot;">​</a></h2><p>We currently support for several different boards, and we are working on adding more.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>It is important to note that the <code>esp32AIThinker</code> environment is the default environment. Only switch your environment if you have another board or an environment is not working.</p><p>Most esp32Cams from Aliexpress will work with the <code>esp32AIThinker</code> environment, but some may require the <code>esp32cam</code> environment. Test the default environment first, and if it does not work, try the <code>esp32cam</code> environment.</p></div><p>Currently supported boards:</p><ul><li><code>esp32AIThinker</code> - This is the default environment. This is for the ESP32-AI-THINKER and generic alibaba/aliexpress/amazon esp cam boards.</li><li><code>esp32Cam</code> - This is for the special ESP32-CAM, it is unlikely that you will need to use this environment.</li><li><code>esp32M5Stack</code> - This is for ESP32M5Stack.</li><li><code>esp32WRover</code> - This is for the ESP32WRover.</li><li><code>esp-eye</code> - This is for the ESP-EYE (not the S3 variant).</li><li><code>wrooms3</code> - For FREENOVE-ESP32-S3 (<em>wireless mode</em>)</li><li><code>wrooms3QIO</code> - For FREENOVE-ESP32-S3 (<em>wireless mode</em>, for boards with octal flash)</li><li><code>wrooms3USB</code> - For FREENOVE-ESP32-S3 (<em>wired mode</em>)</li><li><code>wrooms3QIOUSB</code> - For FREENOVE-ESP32-S3 (<em>wired mode</em>, for boards with octal flash)</li><li><code>xiaosenses3</code> - For SeedStudio&#39;s XAIO ESP32-S3 Sense (<em>wireless mode</em>)</li><li><code>xiaosenses3_USB</code> - For SeedStudio&#39;s XAIO ESP32-S3 Sense (<em>wired mode</em>)</li></ul><p>You can change the board enviroment by changing the <code>default_envs</code> argument in <code>platformio.ini</code> to a supported board like shown:</p>',17)),r(o,{options:a(i).esp_board_env},null,8,["options"])]))}});export{p as __pageData,u as default};
